# -*- coding: utf-8 -*-
"""savingapiresults.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ybLqOxyyj_J7o7_TL7Y3OP4DP0sID435
"""

import requests
import pandas as pd
import subprocess
from datetime import datetime

def fetch_and_save_aqi_data(api_url, csv_filename):
    try:
        # Fetch data from API
        response = requests.get(api_url)
        response.raise_for_status()  # Check for request errors
        data = response.json()  # Parse JSON response

        # Extract map ranking data
        map_ranking_data = data.get("map_ranking", [])

        # Convert to DataFrame and add additional columns
        df = pd.DataFrame(map_ranking_data)
        df['date'] = datetime.now().strftime('%-m/%-d/%Y')  # Format date as M/D/YYYY
        df['hour'] = datetime.now().strftime('%H:00')  # Format hour as HH:00

        # Rename columns to match the exact file format
        df = df.rename(columns={
            'district': 'District',
            'aqi': 'AQI'
        })

        # Reorder columns to match the desired format
        df = df[['date', 'hour', 'District', 'AQI']]

        # Display the DataFrame in the console
        print("Fetched AQI Data:\n", df)

        # Append to the existing CSV file, if it exists, without headers
        df.to_csv(csv_filename, mode='a', header=not pd.io.common.file_exists(csv_filename), index=False)
        print(f"Data appended to {csv_filename}")

        # Commit CSV to Git repository
        subprocess.run(['git', 'add', csv_filename], check=True)
        subprocess.run(['git', 'commit', '-m', f'Update {csv_filename} with new API data'], check=True)
        subprocess.run(['git', 'push'], check=True)
        print(f"{csv_filename} committed and pushed to Git repository.")

    except requests.exceptions.RequestException as e:
        print(f"Error fetching data from API: {e}")
    except Exception as e:
        print(f"Error saving data to CSV or committing to Git: {e}")

# # Example usage
# api_url = "https://smog-aqi-server.onrender.com/api/map_ranking?use_api=truedata"
# csv_filename = "combined_hourly_data.csv"
# fetch_and_save_aqi_data(api_url, csv_filename)